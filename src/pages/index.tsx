import { SignIn, SignInButton, SignOutButton, auth, useUser } from "@clerk/nextjs";
import Head from "next/head";
import {type NextPage} from "next";
import Link from "next/link";
import { RouterOutputs, api } from "y/utils/api";
import relativeTime from "dayjs/plugin/relativeTime";
import dayjs from "dayjs";



export default function Home() {
  type PostWithUser = RouterOutputs["posts"]["getAll"][number];
  const PostView = (props: PostWithUser)=> {
    const {post, author} = props;
    return (
      <div key={post.id} className="flex p-4 border-b border-slate-400 gap-3">
      <img src={author.profileImageUrl} alt="Profile Image" className="w-14 h-14 rounded-full" /> 
      <div className="flex felx-col">
        <div className="flex text-slate-300 gap-2 font-bold">
          {/* <span>{`@${author.username}`}</span> 
           <span className="font-thin">{`hello`}</span> */}

          </div>
          <span>{post.content}</span>
      </div>
      </div>
    
    ) 
  }
  const user = useUser();
  const {data ,isLoading} = api.posts.getAll.useQuery();

  const CreatePostWizard = () => {
    const {user} = useUser();
    console.log(user);
    if(!user) return null;

    return <div className="flex w-full gap-4 ">
      <input type="text" placeholder="Type Something" className="bg-transparent grow p-2 outline-none"  />
    </div>
  }
  if(isLoading) return <div>Loading...</div>;
  if(!data) return <div>Something went wrong</div>
  return (
    <> 
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app bg-red" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full md:max-w-2xl border-x border-slate-400">
          <div className="flex border-b p-4 border-slate-400">
      {!user.isSignedIn &&<div className="flex justify-center"> <SignInButton /></div>}
      {!!user.isSignedIn &&<div className="flex justify-center p-4"> <SignOutButton /></div>}

      {user.isSignedIn && <CreatePostWizard/>} 
      </div>
      <div className="flex flex-col">
        {[...data!,...data!]?.map((fullPost)=> (<PostView {...fullPost} key={fullPost.post.id}/>))}
      </div>
      </div>
      </main>
    </>
  );
}
